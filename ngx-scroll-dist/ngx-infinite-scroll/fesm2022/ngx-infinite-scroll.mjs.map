{"version":3,"file":"ngx-infinite-scroll.mjs","sources":["../../../projects/ngx-infinite-scroll/src/lib/ngx-infinite-scroll.service.ts","../../../projects/ngx-infinite-scroll/src/lib/services/ngx-ins-utils.ts","../../../projects/ngx-infinite-scroll/src/lib/services/axis-resolver.ts","../../../projects/ngx-infinite-scroll/src/lib/services/event-trigger.ts","../../../projects/ngx-infinite-scroll/src/lib/services/position-resolver.ts","../../../projects/ngx-infinite-scroll/src/lib/services/scroll-resolver.ts","../../../projects/ngx-infinite-scroll/src/lib/services/scroll-state.ts","../../../projects/ngx-infinite-scroll/src/lib/services/scroll-register.ts","../../../projects/ngx-infinite-scroll/src/lib/ngx-infinite-scroll.directive.ts","../../../projects/ngx-infinite-scroll/src/lib/ngx-infinite-scroll.module.ts","../../../projects/ngx-infinite-scroll/src/public-api.ts","../../../projects/ngx-infinite-scroll/src/ngx-infinite-scroll.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxInfiniteScrollService {\r\n\r\n  constructor() { }\r\n}\r\n","import { ElementRef, SimpleChange } from '@angular/core';\r\n\r\nexport function resolveContainerElement(\r\n  selector: string | any,\r\n  scrollWindow,\r\n  defaultElement,\r\n  fromRoot: boolean\r\n): any {\r\n  const hasWindow = window && !!window.document && window.document.documentElement;\r\n  let container = hasWindow && scrollWindow ? window : defaultElement;\r\n  if (selector) {\r\n    const containerIsString =\r\n      selector && hasWindow && typeof selector === 'string';\r\n    container = containerIsString\r\n      ? findElement(selector, defaultElement.nativeElement, fromRoot)\r\n      : selector;\r\n    if (!container) {\r\n      throw new Error('ngx-infinite-scroll {resolveContainerElement()}: selector for');\r\n    }\r\n  }\r\n  return container;\r\n}\r\n\r\nexport function findElement(\r\n  selector: string | any,\r\n  customRoot: ElementRef | any,\r\n  fromRoot: boolean\r\n) {\r\n  const rootEl = fromRoot ? window.document : customRoot;\r\n  return rootEl.querySelector(selector);\r\n}\r\n\r\nexport function inputPropChanged(prop: SimpleChange): boolean {\r\n  return prop && !prop.firstChange;\r\n}\r\n\r\nexport function hasWindowDefined(): boolean {\r\n  return typeof window !== 'undefined';\r\n}\r\n","const VerticalProps = {\r\n  clientHeight: \"clientHeight\",\r\n  offsetHeight: \"offsetHeight\",\r\n  scrollHeight: \"scrollHeight\",\r\n  pageYOffset: \"pageYOffset\",\r\n  offsetTop: \"offsetTop\",\r\n  scrollTop: \"scrollTop\",\r\n  top: \"top\"\r\n};\r\n\r\nconst HorizontalProps = {\r\n  clientHeight: \"clientWidth\",\r\n  offsetHeight: \"offsetWidth\",\r\n  scrollHeight: \"scrollWidth\",\r\n  pageYOffset: \"pageXOffset\",\r\n  offsetTop: \"offsetLeft\",\r\n  scrollTop: \"scrollLeft\",\r\n  top: \"left\"\r\n};\r\n\r\nexport class AxisResolver {\r\n  private propsMap: any;\r\n\r\n  constructor(private vertical: boolean = true) {\r\n    this.propsMap = vertical ? VerticalProps : HorizontalProps;\r\n  }\r\n  clientHeightKey() {\r\n    return this.propsMap.clientHeight;\r\n  }\r\n  offsetHeightKey() {\r\n    return this.propsMap.offsetHeight;\r\n  }\r\n  scrollHeightKey() {\r\n    return this.propsMap.scrollHeight;\r\n  }\r\n  pageYOffsetKey() {\r\n    return this.propsMap.pageYOffset;\r\n  }\r\n  offsetTopKey() {\r\n    return this.propsMap.offsetTop;\r\n  }\r\n  scrollTopKey() {\r\n    return this.propsMap.scrollTop;\r\n  }\r\n  topKey() {\r\n    return this.propsMap.top;\r\n  }\r\n}\r\n","import { IInfiniteScrollEvent, IPositionStats } from '../../models';\r\n\r\nexport interface IScrollerProps extends IDistanceRange {\r\n  container: IPositionStats;\r\n  alwaysCallback: boolean;\r\n  disabled: boolean;\r\n}\r\n\r\nexport interface ITriggerEvents {\r\n  down: (event: any) => any;\r\n  up: (event: any) => any;\r\n}\r\n\r\nexport interface IDistanceRange {\r\n  down: number;\r\n  up: number;\r\n}\r\n\r\nexport interface IScrollConfig {\r\n  alwaysCallback: boolean;\r\n  shouldFireScrollEvent: boolean;\r\n}\r\n\r\nexport function shouldTriggerEvents(\r\n  alwaysCallback: boolean,\r\n  shouldFireScrollEvent: boolean,\r\n  isTriggeredCurrentTotal: boolean\r\n) {\r\n  if (alwaysCallback && shouldFireScrollEvent) {\r\n    return true;\r\n  }\r\n  if (!isTriggeredCurrentTotal && shouldFireScrollEvent) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n","import { ElementRef } from '@angular/core';\r\n\r\nimport {\r\n  ContainerRef,\r\n  IPositionElements,\r\n  IPositionStats,\r\n  IResolver,\r\n} from '../../models';\r\nimport { AxisResolver } from './axis-resolver';\r\n\r\nexport function createResolver({\r\n  windowElement,\r\n  axis,\r\n}: IPositionElements): IResolver {\r\n  return createResolverWithContainer(\r\n    { axis, isWindow: isElementWindow(windowElement) },\r\n    windowElement\r\n  );\r\n}\r\n\r\nexport function createResolverWithContainer(\r\n  resolver: any,\r\n  windowElement: ContainerRef\r\n) {\r\n  const container =\r\n    resolver.isWindow || (windowElement && !windowElement.nativeElement)\r\n      ? windowElement\r\n      : windowElement.nativeElement;\r\n  return { ...resolver, container };\r\n}\r\n\r\nexport function isElementWindow(windowElement: ContainerRef): boolean {\r\n  const isWindow = ['Window', 'global'].some((obj: string) =>\r\n    Object.prototype.toString.call(windowElement).includes(obj)\r\n  );\r\n  return isWindow;\r\n}\r\n\r\nexport function getDocumentElement(\r\n  isContainerWindow: boolean,\r\n  windowElement: any\r\n) {\r\n  return isContainerWindow ? windowElement.document.documentElement : null;\r\n}\r\n\r\nexport function calculatePoints(element: ElementRef, resolver: IResolver) {\r\n  const height = extractHeightForElement(resolver);\r\n  return resolver.isWindow\r\n    ? calculatePointsForWindow(height, element, resolver)\r\n    : calculatePointsForElement(height, element, resolver);\r\n}\r\n\r\nexport function calculatePointsForWindow(\r\n  height: number,\r\n  element: ElementRef,\r\n  resolver: IResolver\r\n): IPositionStats {\r\n  const { axis, container, isWindow } = resolver;\r\n  const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\r\n  // scrolled until now / current y point\r\n  const scrolled =\r\n    height +\r\n    getElementPageYOffset(\r\n      getDocumentElement(isWindow, container),\r\n      axis,\r\n      isWindow\r\n    );\r\n  // total height / most bottom y point\r\n  const nativeElementHeight = getElementHeight(\r\n    element.nativeElement,\r\n    isWindow,\r\n    offsetHeightKey,\r\n    clientHeightKey\r\n  );\r\n  const totalToScroll =\r\n    getElementOffsetTop(element.nativeElement, axis, isWindow) +\r\n    nativeElementHeight;\r\n  return { height, scrolled, totalToScroll, isWindow };\r\n}\r\n\r\nexport function calculatePointsForElement(\r\n  height: number,\r\n  element: ElementRef,\r\n  resolver: IResolver\r\n): IPositionStats {\r\n  const { axis, container } = resolver;\r\n  // perhaps use container.offsetTop instead of 'scrollTop'\r\n  const scrolled = container[axis.scrollTopKey()];\r\n  const totalToScroll = container[axis.scrollHeightKey()];\r\n  return { height, scrolled, totalToScroll, isWindow: false };\r\n}\r\n\r\nexport function extractHeightPropKeys(axis: AxisResolver) {\r\n  return {\r\n    offsetHeightKey: axis.offsetHeightKey(),\r\n    clientHeightKey: axis.clientHeightKey(),\r\n  };\r\n}\r\n\r\nexport function extractHeightForElement({\r\n  container,\r\n  isWindow,\r\n  axis,\r\n}: IResolver) {\r\n  const { offsetHeightKey, clientHeightKey } = extractHeightPropKeys(axis);\r\n  return getElementHeight(\r\n    container,\r\n    isWindow,\r\n    offsetHeightKey,\r\n    clientHeightKey\r\n  );\r\n}\r\nexport function getElementHeight(\r\n  elem: any,\r\n  isWindow: boolean,\r\n  offsetHeightKey: string,\r\n  clientHeightKey: string\r\n) {\r\n  if (isNaN(elem[offsetHeightKey])) {\r\n    const docElem = getDocumentElement(isWindow, elem);\r\n    return docElem ? docElem[clientHeightKey] : 0;\r\n  } else {\r\n    return elem[offsetHeightKey];\r\n  }\r\n}\r\n\r\nexport function getElementOffsetTop(\r\n  elem: ContainerRef,\r\n  axis: AxisResolver,\r\n  isWindow: boolean\r\n) {\r\n  const topKey = axis.topKey();\r\n  // elem = elem.nativeElement;\r\n  if (!elem.getBoundingClientRect) {\r\n    // || elem.css('none')) {\r\n    return;\r\n  }\r\n  return (\r\n    elem.getBoundingClientRect()[topKey] +\r\n    getElementPageYOffset(elem, axis, isWindow)\r\n  );\r\n}\r\n\r\nexport function getElementPageYOffset(\r\n  elem: ContainerRef,\r\n  axis: AxisResolver,\r\n  isWindow: boolean\r\n) {\r\n  const pageYOffset = axis.pageYOffsetKey();\r\n  const scrollTop = axis.scrollTopKey();\r\n  const offsetTop = axis.offsetTopKey();\r\n\r\n  if (isNaN(window.pageYOffset)) {\r\n    return getDocumentElement(isWindow, elem)[scrollTop];\r\n  } else if (elem.ownerDocument) {\r\n    return elem.ownerDocument.defaultView[pageYOffset];\r\n  } else {\r\n    return elem[offsetTop];\r\n  }\r\n}\r\n","import { IPositionStats, IScrollState, IScrollerDistance } from '../../models';\r\n\r\nexport function shouldFireScrollEvent(\r\n  container: IPositionStats,\r\n  distance: IScrollerDistance = { down: 0, up: 0 },\r\n  scrollingDown: boolean\r\n) {\r\n  let remaining: number;\r\n  let containerBreakpoint: number;\r\n  if (container.totalToScroll <= 0) {\r\n    return false;\r\n  }\r\n\r\n  const scrolledUntilNow = container.isWindow\r\n    ? container.scrolled\r\n    : container.height + container.scrolled;\r\n  if (scrollingDown) {\r\n    remaining =\r\n      (container.totalToScroll - scrolledUntilNow) / container.totalToScroll;\r\n    const distanceDown = distance?.down ? distance.down : 0;\r\n    containerBreakpoint = distanceDown / 10;\r\n  } else {\r\n    const totalHiddenContentHeight =\r\n      container.scrolled + (container.totalToScroll - scrolledUntilNow);\r\n    remaining = container.scrolled / totalHiddenContentHeight;\r\n    const distanceUp = distance?.up ? distance.up : 0;\r\n    containerBreakpoint = distanceUp / 10;\r\n  }\r\n\r\n  const shouldFireEvent: boolean = remaining <= containerBreakpoint;\r\n  return shouldFireEvent;\r\n}\r\n\r\nexport function isScrollingDownwards(\r\n  lastScrollPosition: number,\r\n  container: IPositionStats\r\n) {\r\n  return lastScrollPosition < container.scrolled;\r\n}\r\n\r\nexport function getScrollStats(\r\n  lastScrollPosition: number,\r\n  container: IPositionStats,\r\n  distance: IScrollerDistance\r\n) {\r\n  const scrollDown = isScrollingDownwards(lastScrollPosition, container);\r\n  return {\r\n    fire: shouldFireScrollEvent(container, distance, scrollDown),\r\n    scrollDown,\r\n  };\r\n}\r\n\r\nexport function updateScrollPosition(\r\n  position: number,\r\n  scrollState: IScrollState\r\n) {\r\n  return (scrollState.lastScrollPosition = position);\r\n}\r\n\r\nexport function updateTotalToScroll(\r\n  totalToScroll: number,\r\n  scrollState: IScrollState\r\n) {\r\n  if (scrollState.lastTotalToScroll !== totalToScroll) {\r\n    scrollState.lastTotalToScroll = scrollState.totalToScroll;\r\n    scrollState.totalToScroll = totalToScroll;\r\n  }\r\n}\r\n\r\nexport function isSameTotalToScroll(scrollState: IScrollState) {\r\n  return scrollState.totalToScroll === scrollState.lastTotalToScroll;\r\n}\r\n\r\nexport function updateTriggeredFlag(\r\n  scroll: number,\r\n  scrollState: IScrollState,\r\n  triggered: boolean,\r\n  isScrollingDown: boolean\r\n) {\r\n  if (isScrollingDown) {\r\n    scrollState.triggered.down = scroll;\r\n  } else {\r\n    scrollState.triggered.up = scroll;\r\n  }\r\n}\r\n\r\nexport function isTriggeredScroll(\r\n  totalToScroll: number,\r\n  scrollState: IScrollState,\r\n  isScrollingDown: boolean\r\n) {\r\n  return isScrollingDown\r\n    ? scrollState.triggered.down === totalToScroll\r\n    : scrollState.triggered.up === totalToScroll;\r\n}\r\n\r\nexport function updateScrollState(\r\n  scrollState: IScrollState,\r\n  scrolledUntilNow: number,\r\n  totalToScroll: number\r\n) {\r\n  updateScrollPosition(scrolledUntilNow, scrollState);\r\n  updateTotalToScroll(totalToScroll, scrollState);\r\n  // const isSameTotal = isSameTotalToScroll(scrollState);\r\n  // if (!isSameTotal) {\r\n  //   updateTriggeredFlag(scrollState, false, isScrollingDown);\r\n  // }\r\n}\r\n","import { IScrollState, IScrollerDistance } from '../../models';\r\n\r\nexport class ScrollState implements IScrollState {\r\n  lastScrollPosition = 0;\r\n  lastTotalToScroll = 0;\r\n  totalToScroll = 0;\r\n  triggered: IScrollerDistance = {\r\n    down: 0,\r\n    up: 0,\r\n  };\r\n\r\n  constructor({ totalToScroll }) {\r\n    this.totalToScroll = totalToScroll;\r\n  }\r\n\r\n  updateScrollPosition(position: number) {\r\n    return (this.lastScrollPosition = position);\r\n  }\r\n\r\n  updateTotalToScroll(totalToScroll: number) {\r\n    if (this.lastTotalToScroll !== totalToScroll) {\r\n      this.lastTotalToScroll = this.totalToScroll;\r\n      this.totalToScroll = totalToScroll;\r\n    }\r\n  }\r\n\r\n  updateScroll(scrolledUntilNow: number, totalToScroll: number) {\r\n    this.updateScrollPosition(scrolledUntilNow);\r\n    this.updateTotalToScroll(totalToScroll);\r\n  }\r\n\r\n  updateTriggeredFlag(scroll, isScrollingDown: boolean) {\r\n    if (isScrollingDown) {\r\n      this.triggered.down = scroll;\r\n    } else {\r\n      this.triggered.up = scroll;\r\n    }\r\n  }\r\n\r\n  isTriggeredScroll(totalToScroll, isScrollingDown: boolean) {\r\n    return isScrollingDown\r\n      ? this.triggered.down === totalToScroll\r\n      : this.triggered.up === totalToScroll;\r\n  }\r\n}\r\n","import { Observable, of, fromEvent } from 'rxjs';\r\nimport { map, mergeMap, tap, throttleTime, filter } from 'rxjs/operators';\r\n\r\nimport * as Models from '../../models';\r\nimport { AxisResolver } from './axis-resolver';\r\nimport { shouldTriggerEvents } from './event-trigger';\r\nimport { resolveContainerElement } from './ngx-ins-utils';\r\nimport { calculatePoints, createResolver } from './position-resolver';\r\nimport * as ScrollResolver from './scroll-resolver';\r\nimport { ScrollState } from './scroll-state';\r\n\r\nexport function createScroller(config: Models.IScroller) {\r\n  const { scrollContainer, scrollWindow, element, fromRoot } = config;\r\n  const resolver = createResolver({\r\n    axis: new AxisResolver(!config.horizontal),\r\n    windowElement: resolveContainerElement(\r\n      scrollContainer,\r\n      scrollWindow,\r\n      element,\r\n      fromRoot\r\n    ),\r\n  });\r\n  const scrollState = new ScrollState({\r\n    totalToScroll: calculatePoints(element, resolver),\r\n  });\r\n  const options: Models.IScrollRegisterConfig = {\r\n    container: resolver.container,\r\n    throttle: config.throttle,\r\n  };\r\n  const distance = {\r\n    up: config.upDistance,\r\n    down: config.downDistance,\r\n  };\r\n  return attachScrollEvent(options).pipe(\r\n    mergeMap(() => of(calculatePoints(element, resolver))),\r\n    map((positionStats: Models.IPositionStats) =>\r\n      toInfiniteScrollParams(\r\n        scrollState.lastScrollPosition,\r\n        positionStats,\r\n        distance\r\n      )\r\n    ),\r\n    tap(({ stats }: Models.IScrollParams) =>\r\n      scrollState.updateScroll(stats.scrolled, stats.totalToScroll)\r\n    ),\r\n    filter(\r\n      ({ fire, scrollDown, stats: { totalToScroll } }: Models.IScrollParams) =>\r\n        shouldTriggerEvents(\r\n          config.alwaysCallback,\r\n          fire,\r\n          scrollState.isTriggeredScroll(totalToScroll, scrollDown)\r\n        )\r\n    ),\r\n    tap(({ scrollDown, stats: { totalToScroll } }: Models.IScrollParams) => {\r\n      scrollState.updateTriggeredFlag(totalToScroll, scrollDown);\r\n    }),\r\n    map(toInfiniteScrollAction)\r\n  );\r\n}\r\n\r\nexport function attachScrollEvent(\r\n  options: Models.IScrollRegisterConfig\r\n): Observable<{}> {\r\n  let obs = fromEvent(options.container, 'scroll');\r\n  // For an unknown reason calling `sampleTime()` causes trouble for many users, even with `options.throttle = 0`.\r\n  // Let's avoid calling the function unless needed.\r\n  // Replacing with throttleTime seems to solve the problem\r\n  // See https://github.com/orizens/ngx-infinite-scroll/issues/198\r\n  if (options.throttle) {\r\n    obs = obs.pipe(\r\n      throttleTime(options.throttle, undefined, {\r\n        leading: true,\r\n        trailing: true,\r\n      })\r\n    );\r\n  }\r\n  return obs as any;\r\n}\r\n\r\nexport function toInfiniteScrollParams(\r\n  lastScrollPosition: number,\r\n  stats: Models.IPositionStats,\r\n  distance: Models.IScrollerDistance\r\n): Models.IScrollParams {\r\n  const { scrollDown, fire } = ScrollResolver.getScrollStats(\r\n    lastScrollPosition,\r\n    stats,\r\n    distance\r\n  );\r\n  return {\r\n    scrollDown,\r\n    fire,\r\n    stats,\r\n  };\r\n}\r\n\r\nexport const InfiniteScrollActions = {\r\n  DOWN: '[NGX_ISE] DOWN',\r\n  UP: '[NGX_ISE] UP',\r\n};\r\n\r\nexport function toInfiniteScrollAction(\r\n  response: Models.IScrollParams\r\n): Models.IInfiniteScrollAction {\r\n  const {\r\n    scrollDown,\r\n    stats: { scrolled: currentScrollPosition },\r\n  } = response;\r\n  return {\r\n    type: scrollDown ? InfiniteScrollActions.DOWN : InfiniteScrollActions.UP,\r\n    payload: {\r\n      currentScrollPosition,\r\n    },\r\n  };\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { IInfiniteScrollEvent, IInfiniteScrollAction } from '../models';\r\nimport { hasWindowDefined, inputPropChanged } from './services/ngx-ins-utils';\r\nimport {\r\n  createScroller,\r\n  InfiniteScrollActions,\r\n} from './services/scroll-register';\r\n\r\n@Directive({\r\n  selector: '[infiniteScroll], [infinite-scroll], [data-infinite-scroll]',\r\n})\r\nexport class InfiniteScrollDirective\r\n  implements OnDestroy, OnChanges, AfterViewInit\r\n{\r\n  @Output() scrolled = new EventEmitter<IInfiniteScrollEvent>();\r\n  @Output() scrolledUp = new EventEmitter<IInfiniteScrollEvent>();\r\n\r\n  @Input() infiniteScrollDistance: number = 2;\r\n  @Input() infiniteScrollUpDistance: number = 1.5;\r\n  @Input() infiniteScrollThrottle: number = 150;\r\n  @Input() infiniteScrollDisabled: boolean = false;\r\n  @Input() infiniteScrollContainer: any = null;\r\n  @Input() scrollWindow: boolean = true;\r\n  @Input() immediateCheck: boolean = false;\r\n  @Input() horizontal: boolean = false;\r\n  @Input() alwaysCallback: boolean = false;\r\n  @Input() fromRoot: boolean = false;\r\n\r\n  private disposeScroller?: Subscription;\r\n\r\n  constructor(private element: ElementRef, private zone: NgZone) {}\r\n\r\n  ngAfterViewInit() {\r\n    if (!this.infiniteScrollDisabled) {\r\n      this.setup();\r\n    }\r\n  }\r\n\r\n  ngOnChanges({\r\n    infiniteScrollContainer,\r\n    infiniteScrollDisabled,\r\n    infiniteScrollDistance,\r\n  }: SimpleChanges) {\r\n    const containerChanged = inputPropChanged(infiniteScrollContainer);\r\n    const disabledChanged = inputPropChanged(infiniteScrollDisabled);\r\n    const distanceChanged = inputPropChanged(infiniteScrollDistance);\r\n    const shouldSetup =\r\n      (!disabledChanged && !this.infiniteScrollDisabled) ||\r\n      (disabledChanged && !infiniteScrollDisabled.currentValue) ||\r\n      distanceChanged;\r\n\r\n    if (containerChanged || disabledChanged || distanceChanged) {\r\n      this.destroyScroller();\r\n      if (shouldSetup) {\r\n        this.setup();\r\n      }\r\n    }\r\n  }\r\n\r\n  setup() {\r\n    if (hasWindowDefined()) {\r\n      this.zone.runOutsideAngular(() => {\r\n        this.disposeScroller = createScroller({\r\n          fromRoot: this.fromRoot,\r\n          alwaysCallback: this.alwaysCallback,\r\n          disable: this.infiniteScrollDisabled,\r\n          downDistance: this.infiniteScrollDistance,\r\n          element: this.element,\r\n          horizontal: this.horizontal,\r\n          scrollContainer: this.infiniteScrollContainer,\r\n          scrollWindow: this.scrollWindow,\r\n          throttle: this.infiniteScrollThrottle,\r\n          upDistance: this.infiniteScrollUpDistance,\r\n        }).subscribe((payload) => this.handleOnScroll(payload));\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOnScroll({ type, payload }: IInfiniteScrollAction) {\r\n    const emitter =\r\n      type === InfiniteScrollActions.DOWN ? this.scrolled : this.scrolledUp;\r\n\r\n    if (hasObservers(emitter)) {\r\n      this.zone.run(() => emitter.emit(payload));\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroyScroller();\r\n  }\r\n\r\n  destroyScroller() {\r\n    if (this.disposeScroller) {\r\n      this.disposeScroller.unsubscribe();\r\n    }\r\n  }\r\n}\r\n\r\nfunction hasObservers<T>(emitter: EventEmitter<T>): boolean {\r\n  // Note: The `observed` property is available only in RxJS@7.2.0, which means it's\r\n  // not available for users running the lower version.\r\n  return emitter.observed ?? emitter.observers.length > 0;\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { InfiniteScrollDirective } from './ngx-infinite-scroll.directive';\r\n\r\n@NgModule({\r\n  declarations: [InfiniteScrollDirective],\r\n  exports: [InfiniteScrollDirective],\r\n  imports: [],\r\n  providers: [],\r\n})\r\nexport class InfiniteScrollModule {}\r\n","/*\r\n * Public API Surface of ngx-infinite-scroll\r\n */\r\n\r\nexport * from './lib/ngx-infinite-scroll.service';\r\nexport { InfiniteScrollDirective } from './lib/ngx-infinite-scroll.directive';\r\nexport { InfiniteScrollModule } from './lib/ngx-infinite-scroll.module';\r\nexport {\r\n  ContainerRef,\r\n  IInfiniteScrollEvent,\r\n  IPositionElements,\r\n  IPositionStats,\r\n  IResolver,\r\n} from './models';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["ScrollResolver.getScrollStats"],"mappings":"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"}